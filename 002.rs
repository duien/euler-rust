// Each new term in the Fibonacci sequence is generated by adding the
// previous two terms. By starting with 1 and 2, the first 10 terms will be:

// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

// By considering the terms in the Fibonacci sequence whose values do not
// exceed four million, find the sum of the even-valued terms.

fn fibonacci(max: int) -> int {
  let mut last_term = 1;
  let mut curr_term = 1;

  let mut sum = 0;

  while last_term + curr_term < max {
    let next_term = last_term + curr_term;
    last_term = curr_term ;
    curr_term = next_term;

    if curr_term % 2 == 0{
      sum += curr_term;
    }
  }
  sum
}

fn print_sum(max: int) {
  println!("sum to {} is {}", max, fibonacci(max));
}

fn main() {
  print_sum(100);
  print_sum(4000000);
}
